;
; File generated by cc65 v 2.15
;
	.fopt		compiler,"cc65 v 2.15"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.export		_index
	.export		_TEXT
	.export		_PALETTE
	.export		_main

.segment	"RODATA"

_TEXT:
	.byte	$48,$6F,$6C,$61,$20,$6D,$75,$6E,$64,$6F,$21,$00
_PALETTE:
	.byte	$0F
	.byte	$17
	.byte	$28
	.byte	$39

.segment	"BSS"

_index:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

;
; PPU_CTRL = 0;
;
	lda     #$00
	sta     $2000
;
; PPU_MASK = 0;
;
	sta     $2001
;
; PPU_ADDRESS = 0x3f;   //Se posiciona en la PPU en la dirección 0x3f00
;
	lda     #$3F
	sta     $2006
;
; PPU_ADDRESS = 0x00;
;
	lda     #$00
	sta     $2006
;
; for(index = 0; index < sizeof(PALETTE); ++index){
;
	sta     _index
L0060:	lda     _index
	cmp     #$04
	bcs     L0061
;
; PPU_DATA = PALETTE[index];
;
	ldy     _index
	lda     _PALETTE,y
	sta     $2007
;
; for(index = 0; index < sizeof(PALETTE); ++index){
;
	inc     _index
	jmp     L0060
;
; PPU_ADDRESS = 0x20;    //  Se posiciona el inicio donde se inicia a escribir
;
L0061:	lda     #$20
	sta     $2006
;
; PPU_ADDRESS = 0x00;    //  sobre la pantalla con indices de tiles
;
	lda     #$00
	sta     $2006
;
; for (index = 0; index < 255; ++index){ //No se puede usar el número 256 
;
	sta     _index
L0062:	lda     _index
	cmp     #$FF
	bcs     L0063
;
; PPU_DATA= index;
;
	sta     $2007
;
; for (index = 0; index < 255; ++index){ //No se puede usar el número 256 
;
	inc     _index
	jmp     L0062
;
; PPU_DATA= 0xff;//Se agrega manualmente el último tile (255)
;
L0063:	lda     #$FF
	sta     $2007
;
; PPU_ADDRESS = 0x22;  // establece una dirección en el PPU de 0x21ca
;
	lda     #$22
	sta     $2006
;
; PPU_ADDRESS = 0x1f;
;
	lda     #$1F
	sta     $2006
;
; for( index = 0; index < sizeof(TEXT); ++index ){
;
	lda     #$00
	sta     _index
L0064:	lda     _index
	cmp     #$0C
	bcs     L0065
;
; PPU_DATA = TEXT[index];
;
	ldy     _index
	lda     _TEXT,y
	sta     $2007
;
; for( index = 0; index < sizeof(TEXT); ++index ){
;
	inc     _index
	jmp     L0064
;
; PPU_ADDRESS = 0;
;
L0065:	lda     #$00
	sta     $2006
;
; PPU_ADDRESS = 0;
;
	sta     $2006
;
; SCROLL = 0;
;
	sta     $2005
;
; SCROLL = 0;
;
	sta     $2005
;
; PPU_CTRL = 0x90;   //Pantalla prendida,  (non-maskable interrupt) NMI on 
;
	lda     #$90
	sta     $2000
;
; PPU_MASK = 0x1e;
;
	lda     #$1E
	sta     $2001
;
; while (1);
;
L005F:	jmp     L005F

.endproc

